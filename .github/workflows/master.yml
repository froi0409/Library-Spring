name: Library

on:
  push:
    branches:
      - library-handling
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout and copy code to workflow
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 21.7.0

      - name: Set up Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Install frontend
        run: |
          cd react-app/
          npm install

      - name: Install Spring backend
        run: |
          cd library/
          mvn clean install -U
          mvn clean package
          mvn clean test jacoco:report
    
      - name: JaCoCo Reports
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: library/target/site/jacoco

  delivery:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      USER_VM: ${{ secrets.USER_VM }}  
      VM_NAME: ${{ secrets.VM_NAME }} 
      ZONE: ${{ secrets.ZONE }} 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      
    steps:
      # Copy code to runner environment
      - name: Checkout and copy code to workflow
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Auth Dockerhub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Auth GCP
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'
               
      # Configurar .env frontend
      - name: Configure frontend environment variables
        run: |        
          cd react-app/
          echo "${{ secrets.FRONTEND_ENV }}" >> .env

      # Configure images
      - name: Push DB Image
        env: 
          NAME: library_db   
        run: |
          cd database/
          docker build -t ${{ env.NAME }}:latest .
          docker tag ${{ env.NAME }}:latest ${{ env.DOCKERHUB_USERNAME }}/${{ env.NAME }}:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.NAME }}:latest

      - name: Push Frontend Image
        env: 
          NAME: library_frontend   
        run: |
          cd react-app/
          docker build -t ${{ env.NAME }}:latest .
          docker tag ${{ env.NAME }}:latest ${{ env.DOCKERHUB_USERNAME }}/${{ env.NAME }}:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.NAME }}:latest
      
      - name: Push Backend Image
        env: 
          NAME: library_backend   
        run: |
          cd library/
          docker build -t ${{ env.NAME }}:latest .
          docker tag ${{ env.NAME }}:latest ${{ env.DOCKERHUB_USERNAME }}/${{ env.NAME }}:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.NAME }}:latest

      # DEPLOY  
      - name: 'Execute script on VM'
        run: |
          gcloud compute ssh ${{ env.USER_VM }}@${{ env.VM_NAME }} --zone=${{ env.ZONE }} --command="cd project && bash deploy.sh"

      